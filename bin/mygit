#!/bin/sh

set -eux

usage() {
    cat <<EOF
usage:
  mygit clone <url> <name>
  mygit mirrors
EOF
}

# $1: name
syncthing_clone() {
    g="${HOME}/g/$1"
    s="${HOME}/s/$1"
    url="git@codeberg.org:svmhdvn/$1.git"
    if test -r "${g}/HEAD"; then
        echo "'${url}' is already bare cloned to '${g}'." >&2
        exit 0
    fi

    mkdir -p "${HOME}/g"
    git clone --bare "${url}" "${g}"

    # TODO once git supports setting an existing directory AS a worktree,
    # remove this workaround
    # ===================================================================
    if test -f "${s}/.git"; then
        git -C "${g}" worktree add --no-checkout /tmp/siva-tmp-worktree main
        rm -rf /tmp/siva-tmp-worktree
        mv "${g}/worktrees/siva-tmp-worktree" "${g}/worktrees/main"
    else
        git -C "${g}" worktree add "${s}" main
        mv "${g}/worktrees/$1" "${g}/worktrees/main"
    fi
    echo "gitdir: ../../g/$1/worktrees/main" > "${s}/.git"
    echo "../../s/$1/.git" > "${g}/worktrees/main/gitdir"
    # ===================================================================

    cd "${s}"
    setup_mymirrors
}

setup_mymirrors() {
    if ! test -e .git; then
        echo "ERROR: PWD='${PWD}' not a git repository!" >&2
        exit 64 # EX_USAGE
    fi

    origin="$(git remote get-url origin)"
    repo_with_ext="${origin##*/}"
    repo="${repo_with_ext%%.git}"
    sourcehut="git@git.sr.ht:~svmhdvn/${repo}"
    github="git@github.com:svmhdvn/${repo}.git"
    codeberg="git@codeberg.org:svmhdvn/${repo}.git"

    git remote remove mymirrors || true
    git remote add mymirrors "${codeberg}"
    git remote set-url --add --push mymirrors "${codeberg}"
    git remote set-url --add --push mymirrors "${github}"
    git remote set-url --add --push mymirrors "${sourcehut}"
    git push -u mymirrors main
    git remote remove origin
}

case "$1" in
    stclone) syncthing_clone "$2" ;;
    mirrors) setup_mymirrors ;;
    *)
        echo "ERROR: unrecognized command '$1'" >&2
        exit 64 # EX_USAGE
esac
